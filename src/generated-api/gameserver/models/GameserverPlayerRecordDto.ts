/* tslint:disable */
/* eslint-disable */
/**
 * GameServer api
 * Matches, players, mmrs
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists } from '../runtime';
import {
  GameserverMatchDto,
  GameserverMatchDtoFromJSON,
  GameserverMatchDtoToJSON,
  GameserverRecordType,
  GameserverRecordTypeFromJSON,
  GameserverRecordTypeToJSON,
} from './';

/**
 *
 * @export
 * @interface GameserverPlayerRecordDto
 */
export class GameserverPlayerRecordDto {
    /**
     *
     * @type {GameserverRecordType}
     * @memberof GameserverPlayerRecordDto
     */
    recordType: GameserverRecordType;
    /**
     *
     * @type {string}
     * @memberof GameserverPlayerRecordDto
     */
    steamId: string;
    /**
     *
     * @type {GameserverMatchDto}
     * @memberof GameserverPlayerRecordDto
     */
    match?: GameserverMatchDto;
}

export function GameserverPlayerRecordDtoFromJSON(json: any): GameserverPlayerRecordDto {
    return GameserverPlayerRecordDtoFromJSONTyped(json, false);
}

export function GameserverPlayerRecordDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): GameserverPlayerRecordDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {

        'recordType': GameserverRecordTypeFromJSON(json['recordType']),
        'steamId': json['steamId'],
        'match': !exists(json, 'match') ? undefined : GameserverMatchDtoFromJSON(json['match']),
    };
}

export function GameserverPlayerRecordDtoToJSON(value?: GameserverPlayerRecordDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {

        'recordType': GameserverRecordTypeToJSON(value.recordType),
        'steamId': value.steamId,
        'match': GameserverMatchDtoToJSON(value.match),
    };
}


