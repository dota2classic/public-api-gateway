/* tslint:disable */
/* eslint-disable */
/**
 * GameServer api
 * Matches, players, mmrs
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { GameserverPlayerInMatchDto, GameserverPlayerInMatchDtoFromJSON, GameserverPlayerInMatchDtoToJSON } from './';

/**
 *
 * @export
 * @interface GameserverMatchDto
 */
export class GameserverMatchDto {
    /**
     *
     * @type {number}
     * @memberof GameserverMatchDto
     */
    id: number;
    /**
     *
     * @type {number}
     * @memberof GameserverMatchDto
     */
    mode: GameserverMatchDtoModeEnum;
    /**
     *
     * @type {number}
     * @memberof GameserverMatchDto
     */
    game_mode: GameserverMatchDtoGameModeEnum;
    /**
     *
     * @type {Array<GameserverPlayerInMatchDto>}
     * @memberof GameserverMatchDto
     */
    radiant: Array<GameserverPlayerInMatchDto>;
    /**
     *
     * @type {Array<GameserverPlayerInMatchDto>}
     * @memberof GameserverMatchDto
     */
    dire: Array<GameserverPlayerInMatchDto>;
    /**
     *
     * @type {number}
     * @memberof GameserverMatchDto
     */
    winner: number;
    /**
     *
     * @type {number}
     * @memberof GameserverMatchDto
     */
    duration: number;
    /**
     *
     * @type {string}
     * @memberof GameserverMatchDto
     */
    timestamp: string;
}

export function GameserverMatchDtoFromJSON(json: any): GameserverMatchDto {
    return GameserverMatchDtoFromJSONTyped(json, false);
}

export function GameserverMatchDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): GameserverMatchDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {

        'id': json['id'],
        'mode': json['mode'],
        'game_mode': json['game_mode'],
        'radiant': ((json['radiant'] as Array<any>).map(GameserverPlayerInMatchDtoFromJSON)),
        'dire': ((json['dire'] as Array<any>).map(GameserverPlayerInMatchDtoFromJSON)),
        'winner': json['winner'],
        'duration': json['duration'],
        'timestamp': json['timestamp'],
    };
}

export function GameserverMatchDtoToJSON(value?: GameserverMatchDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {

        'id': value.id,
        'mode': value.mode,
        'game_mode': value.game_mode,
        'radiant': ((value.radiant as Array<any>).map(GameserverPlayerInMatchDtoToJSON)),
        'dire': ((value.dire as Array<any>).map(GameserverPlayerInMatchDtoToJSON)),
        'winner': value.winner,
        'duration': value.duration,
        'timestamp': value.timestamp,
    };
}

/**
* @export
* @enum {string}
*/
export enum GameserverMatchDtoModeEnum {
    NUMBER_0 = 0,
    NUMBER_1 = 1,
    NUMBER_2 = 2,
    NUMBER_3 = 3,
    NUMBER_4 = 4,
    NUMBER_5 = 5,
    NUMBER_6 = 6,
    NUMBER_7 = 7,
    NUMBER_8 = 8,
    NUMBER_9 = 9,
    NUMBER_10 = 10
}
/**
* @export
* @enum {string}
*/
export enum GameserverMatchDtoGameModeEnum {
    NUMBER_1 = 1,
    NUMBER_2 = 2,
    NUMBER_3 = 3,
    NUMBER_4 = 4,
    NUMBER_5 = 5,
    NUMBER_6 = 6,
    NUMBER_7 = 7,
    NUMBER_8 = 8,
    NUMBER_9 = 9,
    NUMBER_10 = 10,
    NUMBER_11 = 11,
    NUMBER_12 = 12,
    NUMBER_13 = 13,
    NUMBER_17 = 17,
    NUMBER_18 = 18,
    NUMBER_21 = 21,
    NUMBER_22 = 22
}


