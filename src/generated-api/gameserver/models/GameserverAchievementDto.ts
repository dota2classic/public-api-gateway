/* tslint:disable */
/* eslint-disable */
/**
 * GameServer api
 * Matches, players, mmrs
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists } from '../runtime';
import { GameserverAchievementKey, GameserverAchievementKeyFromJSON, GameserverAchievementKeyToJSON } from './';

/**
 *
 * @export
 * @interface GameserverAchievementDto
 */
export class GameserverAchievementDto {
    /**
     *
     * @type {GameserverAchievementKey}
     * @memberof GameserverAchievementDto
     */
    key: GameserverAchievementKey;
    /**
     *
     * @type {string}
     * @memberof GameserverAchievementDto
     */
    steamId: string;
    /**
     *
     * @type {number}
     * @memberof GameserverAchievementDto
     */
    progress: number;
    /**
     *
     * @type {number}
     * @memberof GameserverAchievementDto
     */
    percentile: number;
    /**
     *
     * @type {Array<number>}
     * @memberof GameserverAchievementDto
     */
    checkpoints: Array<number>;
    /**
     *
     * @type {boolean}
     * @memberof GameserverAchievementDto
     */
    isComplete: boolean;
    /**
     *
     * @type {number}
     * @memberof GameserverAchievementDto
     */
    matchId?: number;
}

export function GameserverAchievementDtoFromJSON(json: any): GameserverAchievementDto {
    return GameserverAchievementDtoFromJSONTyped(json, false);
}

export function GameserverAchievementDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): GameserverAchievementDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {

        'key': GameserverAchievementKeyFromJSON(json['key']),
        'steamId': json['steamId'],
        'progress': json['progress'],
        'percentile': json['percentile'],
        'checkpoints': json['checkpoints'],
        'isComplete': json['isComplete'],
        'matchId': !exists(json, 'matchId') ? undefined : json['matchId'],
    };
}

export function GameserverAchievementDtoToJSON(value?: GameserverAchievementDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {

        'key': GameserverAchievementKeyToJSON(value.key),
        'steamId': value.steamId,
        'progress': value.progress,
        'percentile': value.percentile,
        'checkpoints': value.checkpoints,
        'isComplete': value.isComplete,
        'matchId': value.matchId,
    };
}


