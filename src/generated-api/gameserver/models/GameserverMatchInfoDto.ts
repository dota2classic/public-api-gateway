/* tslint:disable */
/* eslint-disable */
/**
 * GameServer api
 * Matches, players, mmrs
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { GameserverMatchmakingMode, GameserverMatchmakingModeFromJSON, GameserverMatchmakingModeToJSON } from './';

/**
 *
 * @export
 * @interface GameserverMatchInfoDto
 */
export class GameserverMatchInfoDto {
    /**
     *
     * @type {GameserverMatchmakingMode}
     * @memberof GameserverMatchInfoDto
     */
    mode: GameserverMatchmakingMode;
    /**
     *
     * @type {string}
     * @memberof GameserverMatchInfoDto
     */
    roomId: string;
    /**
     *
     * @type {Array<string>}
     * @memberof GameserverMatchInfoDto
     */
    radiant: Array<string>;
    /**
     *
     * @type {Array<string>}
     * @memberof GameserverMatchInfoDto
     */
    dire: Array<string>;
    /**
     *
     * @type {number}
     * @memberof GameserverMatchInfoDto
     */
    averageMMR: number;
    /**
     *
     * @type {string}
     * @memberof GameserverMatchInfoDto
     */
    version: GameserverMatchInfoDtoVersionEnum;
}

export function GameserverMatchInfoDtoFromJSON(json: any): GameserverMatchInfoDto {
    return GameserverMatchInfoDtoFromJSONTyped(json, false);
}

export function GameserverMatchInfoDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): GameserverMatchInfoDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {

        'mode': GameserverMatchmakingModeFromJSON(json['mode']),
        'roomId': json['roomId'],
        'radiant': json['radiant'],
        'dire': json['dire'],
        'averageMMR': json['averageMMR'],
        'version': json['version'],
    };
}

export function GameserverMatchInfoDtoToJSON(value?: GameserverMatchInfoDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {

        'mode': GameserverMatchmakingModeToJSON(value.mode),
        'roomId': value.roomId,
        'radiant': value.radiant,
        'dire': value.dire,
        'averageMMR': value.averageMMR,
        'version': value.version,
    };
}

/**
* @export
* @enum {string}
*/
export enum GameserverMatchInfoDtoVersionEnum {
    _681 = 'Dota_681',
    _684 = 'Dota_684'
}


