/* tslint:disable */
/* eslint-disable */
/**
 * GameServer api
 * Matches, players, mmrs
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { GameserverPlayerAspect, GameserverPlayerAspectFromJSON, GameserverPlayerAspectToJSON } from './';

/**
 *
 * @export
 * @interface GameserverReportPlayerDto
 */
export class GameserverReportPlayerDto {
    /**
     *
     * @type {GameserverPlayerAspect}
     * @memberof GameserverReportPlayerDto
     */
    aspect: GameserverPlayerAspect;
    /**
     *
     * @type {string}
     * @memberof GameserverReportPlayerDto
     */
    reportedSteamId: string;
    /**
     *
     * @type {string}
     * @memberof GameserverReportPlayerDto
     */
    reporterSteamId: string;
    /**
     *
     * @type {string}
     * @memberof GameserverReportPlayerDto
     */
    text: string;
    /**
     *
     * @type {number}
     * @memberof GameserverReportPlayerDto
     */
    matchId: number;
}

export function GameserverReportPlayerDtoFromJSON(json: any): GameserverReportPlayerDto {
    return GameserverReportPlayerDtoFromJSONTyped(json, false);
}

export function GameserverReportPlayerDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): GameserverReportPlayerDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {

        'aspect': GameserverPlayerAspectFromJSON(json['aspect']),
        'reportedSteamId': json['reportedSteamId'],
        'reporterSteamId': json['reporterSteamId'],
        'text': json['text'],
        'matchId': json['matchId'],
    };
}

export function GameserverReportPlayerDtoToJSON(value?: GameserverReportPlayerDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {

        'aspect': GameserverPlayerAspectToJSON(value.aspect),
        'reportedSteamId': value.reportedSteamId,
        'reporterSteamId': value.reporterSteamId,
        'text': value.text,
        'matchId': value.matchId,
    };
}


