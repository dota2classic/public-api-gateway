/* tslint:disable */
/* eslint-disable */
/**
 * GameServer api
 * Matches, players, mmrs
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    GameserverMatchmakingMode,
    GameserverMatchmakingModeFromJSON,
    GameserverMatchmakingModeFromJSONTyped,
    GameserverMatchmakingModeToJSON,
} from './';

/**
 * 
 * @export
 * @interface GameserverPlayerGameSessionDto
 */
export class GameserverPlayerGameSessionDto {
    /**
     * 
     * @type {GameserverMatchmakingMode}
     * @memberof GameserverPlayerGameSessionDto
     */
    lobbyType: GameserverMatchmakingMode;
    /**
     * 
     * @type {boolean}
     * @memberof GameserverPlayerGameSessionDto
     */
    abandoned: boolean;
    /**
     * 
     * @type {number}
     * @memberof GameserverPlayerGameSessionDto
     */
    matchId: number;
    /**
     * 
     * @type {string}
     * @memberof GameserverPlayerGameSessionDto
     */
    serverUrl: string;
}

export function GameserverPlayerGameSessionDtoFromJSON(json: any): GameserverPlayerGameSessionDto {
    return GameserverPlayerGameSessionDtoFromJSONTyped(json, false);
}

export function GameserverPlayerGameSessionDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): GameserverPlayerGameSessionDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'lobbyType': GameserverMatchmakingModeFromJSON(json['lobbyType']),
        'abandoned': json['abandoned'],
        'matchId': json['matchId'],
        'serverUrl': json['serverUrl'],
    };
}

export function GameserverPlayerGameSessionDtoToJSON(value?: GameserverPlayerGameSessionDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'lobbyType': GameserverMatchmakingModeToJSON(value.lobbyType),
        'abandoned': value.abandoned,
        'matchId': value.matchId,
        'serverUrl': value.serverUrl,
    };
}


