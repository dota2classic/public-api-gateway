/* tslint:disable */
/* eslint-disable */
/**
 * GameServer api
 * Matches, players, mmrs
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
  GameserverBanReason,
  GameserverBanReasonFromJSON,
  GameserverBanReasonToJSON,
  GameserverMatchmakingMode,
  GameserverMatchmakingModeFromJSON,
  GameserverMatchmakingModeToJSON,
} from './';

/**
 *
 * @export
 * @interface GameserverCrimeLogDto
 */
export class GameserverCrimeLogDto {
    /**
     *
     * @type {GameserverBanReason}
     * @memberof GameserverCrimeLogDto
     */
    crime: GameserverBanReason;
    /**
     *
     * @type {GameserverMatchmakingMode}
     * @memberof GameserverCrimeLogDto
     */
    lobby_type: GameserverMatchmakingMode;
    /**
     *
     * @type {number}
     * @memberof GameserverCrimeLogDto
     */
    id: number;
    /**
     *
     * @type {boolean}
     * @memberof GameserverCrimeLogDto
     */
    handled: boolean;
    /**
     *
     * @type {string}
     * @memberof GameserverCrimeLogDto
     */
    steam_id: string;
    /**
     *
     * @type {string}
     * @memberof GameserverCrimeLogDto
     */
    created_at: string;
    /**
     *
     * @type {number}
     * @memberof GameserverCrimeLogDto
     */
    banTime: number;
}

export function GameserverCrimeLogDtoFromJSON(json: any): GameserverCrimeLogDto {
    return GameserverCrimeLogDtoFromJSONTyped(json, false);
}

export function GameserverCrimeLogDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): GameserverCrimeLogDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {

        'crime': GameserverBanReasonFromJSON(json['crime']),
        'lobby_type': GameserverMatchmakingModeFromJSON(json['lobby_type']),
        'id': json['id'],
        'handled': json['handled'],
        'steam_id': json['steam_id'],
        'created_at': json['created_at'],
        'banTime': json['banTime'],
    };
}

export function GameserverCrimeLogDtoToJSON(value?: GameserverCrimeLogDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {

        'crime': GameserverBanReasonToJSON(value.crime),
        'lobby_type': GameserverMatchmakingModeToJSON(value.lobby_type),
        'id': value.id,
        'handled': value.handled,
        'steam_id': value.steam_id,
        'created_at': value.created_at,
        'banTime': value.banTime,
    };
}


