/* tslint:disable */
/* eslint-disable */
/**
 * GameServer api
 * Matches, players, mmrs
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists } from '../runtime';
import { MatchmakerMatchmakingMode, MatchmakerMatchmakingModeFromJSON, MatchmakerMatchmakingModeToJSON } from './';

/**
 *
 * @export
 * @interface MatchmakerGetPartyQueryResultDto
 */
export class MatchmakerGetPartyQueryResultDto {
    /**
     *
     * @type {Array<MatchmakerMatchmakingMode>}
     * @memberof MatchmakerGetPartyQueryResultDto
     */
    modes: Array<MatchmakerMatchmakingMode>;
    /**
     *
     * @type {string}
     * @memberof MatchmakerGetPartyQueryResultDto
     */
    partyId: string;
    /**
     *
     * @type {string}
     * @memberof MatchmakerGetPartyQueryResultDto
     */
    leaderId: string;
    /**
     *
     * @type {Array<string>}
     * @memberof MatchmakerGetPartyQueryResultDto
     */
    players: Array<string>;
    /**
     *
     * @type {boolean}
     * @memberof MatchmakerGetPartyQueryResultDto
     */
    inQueue: boolean;
    /**
     *
     * @type {string}
     * @memberof MatchmakerGetPartyQueryResultDto
     */
    enterQueueTime?: string;
}

export function MatchmakerGetPartyQueryResultDtoFromJSON(json: any): MatchmakerGetPartyQueryResultDto {
    return MatchmakerGetPartyQueryResultDtoFromJSONTyped(json, false);
}

export function MatchmakerGetPartyQueryResultDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): MatchmakerGetPartyQueryResultDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {

        'modes': ((json['modes'] as Array<any>).map(MatchmakerMatchmakingModeFromJSON)),
        'partyId': json['partyId'],
        'leaderId': json['leaderId'],
        'players': json['players'],
        'inQueue': json['inQueue'],
        'enterQueueTime': !exists(json, 'enterQueueTime') ? undefined : json['enterQueueTime'],
    };
}

export function MatchmakerGetPartyQueryResultDtoToJSON(value?: MatchmakerGetPartyQueryResultDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {

        'modes': ((value.modes as Array<any>).map(MatchmakerMatchmakingModeToJSON)),
        'partyId': value.partyId,
        'leaderId': value.leaderId,
        'players': value.players,
        'inQueue': value.inQueue,
        'enterQueueTime': value.enterQueueTime,
    };
}


