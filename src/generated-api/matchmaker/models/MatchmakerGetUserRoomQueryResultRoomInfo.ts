/* tslint:disable */
/* eslint-disable */
/**
 * GameServer api
 * Matches, players, mmrs
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
  MatchmakerMatchmakingMode,
  MatchmakerMatchmakingModeFromJSON,
  MatchmakerMatchmakingModeToJSON,
  MatchmakerReadyCheckEntry,
  MatchmakerReadyCheckEntryFromJSON,
  MatchmakerReadyCheckEntryToJSON,
} from './';

/**
 *
 * @export
 * @interface MatchmakerGetUserRoomQueryResultRoomInfo
 */
export class MatchmakerGetUserRoomQueryResultRoomInfo {
    /**
     *
     * @type {MatchmakerMatchmakingMode}
     * @memberof MatchmakerGetUserRoomQueryResultRoomInfo
     */
    mode: MatchmakerMatchmakingMode;
    /**
     *
     * @type {string}
     * @memberof MatchmakerGetUserRoomQueryResultRoomInfo
     */
    steamId: string;
    /**
     *
     * @type {string}
     * @memberof MatchmakerGetUserRoomQueryResultRoomInfo
     */
    roomId: string;
    /**
     *
     * @type {boolean}
     * @memberof MatchmakerGetUserRoomQueryResultRoomInfo
     */
    iAccepted: boolean;
    /**
     *
     * @type {Array<MatchmakerReadyCheckEntry>}
     * @memberof MatchmakerGetUserRoomQueryResultRoomInfo
     */
    entries: Array<MatchmakerReadyCheckEntry>;
}

export function MatchmakerGetUserRoomQueryResultRoomInfoFromJSON(json: any): MatchmakerGetUserRoomQueryResultRoomInfo {
    return MatchmakerGetUserRoomQueryResultRoomInfoFromJSONTyped(json, false);
}

export function MatchmakerGetUserRoomQueryResultRoomInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): MatchmakerGetUserRoomQueryResultRoomInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {

        'mode': MatchmakerMatchmakingModeFromJSON(json['mode']),
        'steamId': json['steamId'],
        'roomId': json['roomId'],
        'iAccepted': json['iAccepted'],
        'entries': ((json['entries'] as Array<any>).map(MatchmakerReadyCheckEntryFromJSON)),
    };
}

export function MatchmakerGetUserRoomQueryResultRoomInfoToJSON(value?: MatchmakerGetUserRoomQueryResultRoomInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {

        'mode': MatchmakerMatchmakingModeToJSON(value.mode),
        'steamId': value.steamId,
        'roomId': value.roomId,
        'iAccepted': value.iAccepted,
        'entries': ((value.entries as Array<any>).map(MatchmakerReadyCheckEntryToJSON)),
    };
}


